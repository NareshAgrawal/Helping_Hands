/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Shelter_ManagerRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.NGOOrganization;
import Business.Organization.Organization;
import Business.Organization.Room;
import Business.Organization.ShelterOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Maintainance_Workrequest;
import Business.WorkQueue.WorkRequest;
import Business.network.Network;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Surya
 */
public class ShelterManager_toMaintainance extends javax.swing.JPanel {

    /**
     * Creates new form ShelterManager_toMaintainance
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private ShelterOrganization shelterOrganization;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private Enterprise enterprise;
    private String selectedRoom;
    private String maintainType;
    ShelterManager_toMaintainance(JPanel userProcessContainer, UserAccount userAccount, ShelterOrganization shelterOrganization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.system = system;
        this.shelterOrganization = shelterOrganization;
        this.enterprise=enterprise;
        // jLabel2.setText(enterprise.getName());
        populateTable();
        populateJBox();
        dB4OUtil.storeSystem(system);
    }
        
    public void populateTable(){
         DefaultTableModel model = (DefaultTableModel)maintainRequestTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request.getRole().equalsIgnoreCase("Maintainance")){
            Object[] row = new Object[8];
            row[0] = request;
            row[1] = ((Maintainance_Workrequest)request).getMaintainancetype();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getRequestDate();
            row[5] = request.getResolveDate();
            row[6] = request.getStatus();
            row[7] = ((Maintainance_Workrequest)request).getText();
            model.addRow(row);
        }
        }
    }
    public void populateJBox(){
        roomJbox.removeAllItems();
         
            for (Room r: shelterOrganization.getShelter().getRoomList()){
            String room=r.getActualroom();
            roomJbox.addItem(room);
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        maintainRequestTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        maintainJbox = new javax.swing.JComboBox<>();
        roomJbox = new javax.swing.JComboBox<>();
        RequestButton = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        maintainRequestTable.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        maintainRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room Number", "Type", "Sender", "Receiver", "Request Date", "Resolve Date", "Status", "Staff"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(maintainRequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 176, 922, 121));

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("Room:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 337, -1, 40));

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel2.setText("Maintainance Type:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 417, -1, 40));

        maintainJbox.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        maintainJbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plumbing ", "Carpentary", "Electrical ", "Other" }));
        add(maintainJbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 417, 133, 40));

        roomJbox.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        roomJbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        roomJbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomJboxActionPerformed(evt);
            }
        });
        add(roomJbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 337, 133, 40));

        RequestButton.setBackground(new java.awt.Color(102, 102, 255));
        RequestButton.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        RequestButton.setForeground(new java.awt.Color(255, 255, 255));
        RequestButton.setText("Raise New Request");
        RequestButton.setBorder(new javax.swing.border.MatteBorder(null));
        RequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequestButtonActionPerformed(evt);
            }
        });
        add(RequestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 497, 200, 40));

        btnBack.setBackground(new java.awt.Color(102, 102, 102));
        btnBack.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<Back");
        btnBack.setBorder(new javax.swing.border.MatteBorder(null));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 96, 80, 40));

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(new javax.swing.border.MatteBorder(null));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(992, 96, -1, 40));

        jLabel3.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel3.setText("Request To Maintainance Staff");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 16, -1, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void RequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequestButtonActionPerformed
         Date date = new Date();
        Maintainance_Workrequest request= new Maintainance_Workrequest();
       // request.setName(name);
       // request.setMessage(candidateIdTxt.getText());
        selectedRoom= String.valueOf(roomJbox.getSelectedItem());
        maintainType=String.valueOf(maintainJbox.getSelectedItem());
        request.setMessage(selectedRoom);
        request.setStatus("Sent");
        request.setRequestDate(date);
        request.setRole("Maintainance");
        request.setMaintainancetype(maintainType);
        request.setSender(userAccount);
        dB4OUtil.storeSystem(system); 
        Organization org = null;
                for (Network network: system.getNetworkList()){
                    for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()){
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                            if (organization instanceof NGOOrganization){
                                org = organization;
                                break;
                            }
                        }}}
                        if (org!=null){
                            org.getWorkQueue().getWorkRequestList().add(request);
                            userAccount.getWorkQueue().getWorkRequestList().add(request);
                            JOptionPane.showMessageDialog(null, "Requested" );
                            populateTable();
                            dB4OUtil.storeSystem(system);
                        }
    }//GEN-LAST:event_RequestButtonActionPerformed

    private void roomJboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomJboxActionPerformed
        
        
        
    }//GEN-LAST:event_roomJboxActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
         populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RequestButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> maintainJbox;
    private javax.swing.JTable maintainRequestTable;
    private javax.swing.JComboBox<String> roomJbox;
    // End of variables declaration//GEN-END:variables
}
