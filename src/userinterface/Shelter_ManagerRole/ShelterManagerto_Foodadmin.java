/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Shelter_ManagerRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.FoodOrganization;
import Business.Organization.Organization;
import Business.Organization.ShelterOrganization;
import Business.POJO.Homeless;
import Business.POJO.HomelessDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodSupplier_WorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.network.Network;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Surya
 */
public class ShelterManagerto_Foodadmin extends javax.swing.JPanel {

    /**
     * Creates new form ShelterManagerViewRequest
     */
     private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private ShelterOrganization shelterOrganization;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private HomelessDirectory homelessDirectory;
    private Enterprise enterprise;
    private String itemtype;
    private String id;
    private String Name;
    ShelterManagerto_Foodadmin(JPanel userProcessContainer, UserAccount userAccount, ShelterOrganization shelterOrganization, Enterprise enterprise, EcoSystem system,String id,String name) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.system = system;
        this.shelterOrganization = shelterOrganization;
        this.enterprise=enterprise;
        this.id=id;
        this.Name=name;
        CandidateIDTxt.setText(id);
        // jLabel2.setText(enterprise.getName());
        populateTable();
        dB4OUtil.storeSystem(system);
        
    }
     public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)shelterManagerJTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request.getRole().equalsIgnoreCase("Food Admin")){
            Object[] row = new Object[9];
            row[0] = request;
            row[1] = ((FoodSupplier_WorkRequest)request).getHomeless().getName();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getRequestDate();
            row[5] = request.getResolveDate();
            row[6] = request.getStatus();
            row[7] = ((FoodSupplier_WorkRequest)request).getItem();
            row[8] = ((FoodSupplier_WorkRequest)request).getItemtype();
            model.addRow(row);
        }
        }
        
    }
      static boolean isStringValid(String number)
    {
        String regex = "^[a-zA-Z]*$";
        return number.matches(regex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CandidateIDTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        OrderButton = new javax.swing.JButton();
        Itemtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        itemTypeBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        shelterManagerJTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        CandidateIDTxt.setEditable(false);
        CandidateIDTxt.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel3.setText("Candidate Id:");

        OrderButton.setBackground(new java.awt.Color(102, 102, 255));
        OrderButton.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        OrderButton.setForeground(new java.awt.Color(255, 255, 255));
        OrderButton.setText("Place Order");
        OrderButton.setBorder(new javax.swing.border.MatteBorder(null));
        OrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderButtonActionPerformed(evt);
            }
        });

        Itemtxt.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel2.setText("Item");

        itemTypeBox.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        itemTypeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Break Fast ", "Lunch\t", "Dinner ", "Healthy Meal ", "Baby Food" }));
        itemTypeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTypeBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("Meal Type");

        shelterManagerJTable.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        shelterManagerJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Candidate ID", "Candidate Name", "Sender", "Receiver", "Request Date", "Resolve date", "Request Status", "Item", "Item Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(shelterManagerJTable);

        backButton.setBackground(new java.awt.Color(102, 102, 102));
        backButton.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 1, 24)); // NOI18N
        jLabel4.setText("Request To Food Admin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(itemTypeBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Itemtxt)
                                    .addComponent(CandidateIDTxt)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backButton)
                                .addGap(279, 279, 279)
                                .addComponent(jLabel4)))
                        .addGap(0, 326, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(OrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CandidateIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Itemtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(OrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(194, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderButtonActionPerformed
        // TODO add your handling code here:
        int candidateID= Integer.parseInt(CandidateIDTxt.getText());
        String Item =Itemtxt.getText();
        Date date =new Date();
       if(Item.isEmpty()){
            JOptionPane.showMessageDialog(null, "Fields can't be empty");
            return;
       }else{
           if(isStringValid(Item) == false)    
        {
           
            JOptionPane.showMessageDialog(null, "Please enter a valid Item");
            return;
        }  
        
        for(Homeless homeless: system.gethomlessDirectory().getHomelesslist()){
            if (candidateID==homeless.getCandidateID()){
                candidateID=-1;
                FoodSupplier_WorkRequest request= new FoodSupplier_WorkRequest();
                request.setHomeless(homeless);
                request.setItem(Item);
                //request.setMessage(Item);
                request.setSender(userAccount);
                request.setRequestDate(date);
                request.setStatus("Sent");
                request.setItemtype(itemtype);
                request.setRole("Food Admin");
                dB4OUtil.storeSystem(system);
                Organization org = null;
                for (Network network: system.getNetworkList()){

                    for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()){

                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                            if (organization instanceof FoodOrganization){
                                org = organization;
                                break;
                            }
                        }}}
                        if (org!=null){
                            org.getWorkQueue().getWorkRequestList().add(request);
                            userAccount.getWorkQueue().getWorkRequestList().add(request);
                            JOptionPane.showMessageDialog(null, "Requested" );
                            populateTable();
                            dB4OUtil.storeSystem(system);
                        }
                    }
                }
                if(candidateID!=-1)
                {
                    JOptionPane.showMessageDialog(null,"Please enter a Valid Id");
                }
       }
    }//GEN-LAST:event_OrderButtonActionPerformed

    private void itemTypeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTypeBoxActionPerformed
       
        itemtype=String.valueOf(itemTypeBox.getSelectedItem());
        
    }//GEN-LAST:event_itemTypeBoxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CandidateIDTxt;
    private javax.swing.JTextField Itemtxt;
    private javax.swing.JButton OrderButton;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> itemTypeBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable shelterManagerJTable;
    // End of variables declaration//GEN-END:variables
}
