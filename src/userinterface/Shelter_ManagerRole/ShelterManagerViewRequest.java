/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Shelter_ManagerRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Room;
import Business.Organization.ShelterOrganization;
import Business.POJO.HomelessDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.NGO_ManagertoFieldWorker_WorkRequest;
import Business.WorkQueue.ShelterManager_WorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Surya
 */
public class ShelterManagerViewRequest extends javax.swing.JPanel {

    /**
     * Creates new form ShelterManagerViewRequest
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private ShelterOrganization shelterOrganization;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private HomelessDirectory homelessDirectory;
    private Enterprise enterprise;
    private Date date;
    private String room;
    ShelterManagerViewRequest(JPanel userProcessContainer, UserAccount userAccount, ShelterOrganization shelterOrganization, Enterprise enterprise, EcoSystem system) {
    initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.system = system;
        this.shelterOrganization = shelterOrganization;
        this.enterprise=enterprise;
        // jLabel2.setText(enterprise.getName());
        populateTable();
        populateComboBox();
        dB4OUtil.storeSystem(this.system);
    }

    public void populateTable(){
         DefaultTableModel model= (DefaultTableModel)ShelterJtable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : shelterOrganization.getWorkQueue().getWorkRequestList()){
          
            Object[] row = new Object[8];
            row[0] = request;
            row[1] = ((ShelterManager_WorkRequest) request).getName();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver()==null?null:request.getReceiver().getEmployee().getName();
            row[4] = request.getRequestDate();
            row[5] = request.getResolveDate();
            row[6] = request.getStatus();
            row[7] = ((ShelterManager_WorkRequest) request).getRoom();
            model.addRow(row);
        }
        
    }
    public void populateComboBox(){
        RoomJbox.removeAllItems();
         List<Room> seatList = new ArrayList<>();
            //RoomJbox.removeAllItems();
            seatList= shelterOrganization.getShelter().displayAvailableRooms();
            for(Room s:seatList){
                RoomJbox.addItem(s.getActualroom());
            }
     }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ShelterJtable = new javax.swing.JTable();
        AssignButoon = new javax.swing.JButton();
        ProcessButton = new javax.swing.JButton();
        RoomJbox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ShelterJtable.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        ShelterJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Candidate ID", "Name", "Sender", "Receiver", "Requested Date", "Resolved Date", "Status", "Room Alloted"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ShelterJtable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 174, 860, 127));

        AssignButoon.setBackground(new java.awt.Color(102, 102, 255));
        AssignButoon.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        AssignButoon.setForeground(new java.awt.Color(255, 255, 255));
        AssignButoon.setText("Assign to Me");
        AssignButoon.setBorder(new javax.swing.border.MatteBorder(null));
        AssignButoon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignButoonActionPerformed(evt);
            }
        });
        add(AssignButoon, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 341, 141, 40));

        ProcessButton.setBackground(new java.awt.Color(102, 102, 255));
        ProcessButton.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        ProcessButton.setForeground(new java.awt.Color(255, 255, 255));
        ProcessButton.setText("Process");
        ProcessButton.setBorder(new javax.swing.border.MatteBorder(null));
        ProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessButtonActionPerformed(evt);
            }
        });
        add(ProcessButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 421, 141, 40));

        RoomJbox.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        RoomJbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        RoomJbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomJboxActionPerformed(evt);
            }
        });
        add(RoomJbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 421, 140, 40));

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("Allocate Room");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 421, -1, 40));

        backButton.setBackground(new java.awt.Color(102, 102, 102));
        backButton.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("<<Back");
        backButton.setBorder(new javax.swing.border.MatteBorder(null));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 94, 90, 40));

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(new javax.swing.border.MatteBorder(null));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(768, 94, 90, 40));

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel2.setText("Shelter Manager Work Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 24, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void AssignButoonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignButoonActionPerformed
 
    int selectedRow = ShelterJtable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        ShelterManager_WorkRequest request = (ShelterManager_WorkRequest)ShelterJtable.getValueAt(selectedRow, 0);
       
        if(request.getStatus().equalsIgnoreCase("sent")){
            request.setStatus("Processing");
        request.setReceiver(userAccount);
       // request.setRole("Shelter Manager");
        dB4OUtil.storeSystem(system);
        populateTable();
        } else
        {
            JOptionPane.showMessageDialog(null, "Please select a pending request to Assign");
            return;
        }
    }//GEN-LAST:event_AssignButoonActionPerformed

    private void ProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessButtonActionPerformed
        
        date = new Date();
        int selectedRow = ShelterJtable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        ShelterManager_WorkRequest request = (ShelterManager_WorkRequest) ShelterJtable.getValueAt(selectedRow, 0);
        if(request.getStatus().equalsIgnoreCase("Processing")){
            JOptionPane.showMessageDialog(null, "Request Processed Successfully");
            request.setReceiver(userAccount);
            request.setStatus("Request Processed");
            request.setResolveDate(date);
            room =  String.valueOf(RoomJbox.getSelectedItem());
            request.setRoom(room);
            //shelterOrganization.getShelter().getRoomList().remove(Integer.valueOf(room));
            //populateComboBox();
           //removeroom(room);
           shelterOrganization.getShelter().bookroom(room);  
           populateComboBox();
           dB4OUtil.storeSystem(system);
            populateTable();
        }else
        {
            JOptionPane.showMessageDialog(null, "Please select a pending request to process");
            return;
        }
    }//GEN-LAST:event_ProcessButtonActionPerformed

    private void RoomJboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomJboxActionPerformed
        //  room =  String.valueOf(RoomJbox.getSelectedItem());
    }//GEN-LAST:event_RoomJboxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
        
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignButoon;
    private javax.swing.JButton ProcessButton;
    private javax.swing.JComboBox<String> RoomJbox;
    private javax.swing.JTable ShelterJtable;
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
