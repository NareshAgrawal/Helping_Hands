/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Maintences_StaffRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.NGOOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Maintainance_Workrequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nares
 */
public class Maintences_StaffWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Maintences_StaffWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private NGOOrganization ngoOrganization;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private Enterprise enterprise;

    public Maintences_StaffWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, NGOOrganization ngoOrganization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.system = system;
        this.ngoOrganization = ngoOrganization;
        this.enterprise=enterprise;
        populateTable();
    }
    
    public void populateTable(){
        
        DefaultTableModel model= (DefaultTableModel)mainJtable.getModel();
                
        
        model.setRowCount(0);
        for(WorkRequest request : ngoOrganization.getWorkQueue().getWorkRequestList()){
            if(request.getRole().equalsIgnoreCase("Maintainance")){
            Object[] row = new Object[8];
            row[0] = request;
            row[1] = ((Maintainance_Workrequest)request).getMaintainancetype();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getRequestDate();
            row[5] = request.getResolveDate();
            row[6] = request.getStatus();
            row[7] = ((Maintainance_Workrequest)request).getText();
            model.addRow(row);
        }
        }
    }
     static boolean isStringValid(String number)
    {
        String regex = "^[a-zA-Z]*$";
        return number.matches(regex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AssignButton = new javax.swing.JButton();
        ProcessButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        StaffTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainJtable = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        AssignButton.setBackground(new java.awt.Color(102, 102, 255));
        AssignButton.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        AssignButton.setForeground(new java.awt.Color(255, 255, 255));
        AssignButton.setText("Assign");
        AssignButton.setBorder(new javax.swing.border.MatteBorder(null));
        AssignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignButtonActionPerformed(evt);
            }
        });

        ProcessButton.setBackground(new java.awt.Color(102, 102, 255));
        ProcessButton.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        ProcessButton.setForeground(new java.awt.Color(255, 255, 255));
        ProcessButton.setText("Process");
        ProcessButton.setBorder(new javax.swing.border.MatteBorder(null));
        ProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("Allocate Staff:");

        StaffTxt.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        StaffTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        StaffTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffTxtActionPerformed(evt);
            }
        });

        mainJtable.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N
        mainJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room Number", "Type", "Sender", "Receiver", "Request Date", "Resolve Date", "Status", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(mainJtable);

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setBorder(new javax.swing.border.MatteBorder(null));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel2.setText("Maintainance Staff Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AssignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(185, 185, 185)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ProcessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(32, 32, 32)
                                    .addComponent(StaffTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(63, 63, 63)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(AssignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StaffTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(ProcessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void StaffTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StaffTxtActionPerformed

    private void AssignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignButtonActionPerformed
         int selectedRow = mainJtable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        Maintainance_Workrequest request = (Maintainance_Workrequest)mainJtable.getValueAt(selectedRow, 0);
     if(request.getStatus().equalsIgnoreCase("sent")){
         request.setStatus("Processing");
        request.setReceiver(userAccount);
        dB4OUtil.storeSystem(system);
        populateTable();
       
     }else
     {
      JOptionPane.showMessageDialog(null, "Please select a pending request to Assign");
            return;  
     }
         
    }//GEN-LAST:event_AssignButtonActionPerformed

    private void ProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessButtonActionPerformed
       Date date = new Date();
        int selectedRow = mainJtable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
         if(StaffTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please allocate the staff");
       }else{
            if(isStringValid(StaffTxt.getText()) == false)    
        {
           
            JOptionPane.showMessageDialog(null, "Please enter a valid Name");
            return;
        }  
        Maintainance_Workrequest request = (Maintainance_Workrequest) mainJtable.getValueAt(selectedRow, 0);
        if(request.getStatus().equalsIgnoreCase("Processing")){
            JOptionPane.showMessageDialog(null, "Request Processed Successfully");
            request.setReceiver(userAccount);
            request.setStatus("Request Processed");
            request.setText(StaffTxt.getText());
            request.setResolveDate(date);
            StaffTxt.setText("");
            dB4OUtil.storeSystem(system);
            populateTable();
        }else
        {
            JOptionPane.showMessageDialog(null, "Please select a pending request to process");
            return;
        }
         }
    }//GEN-LAST:event_ProcessButtonActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignButton;
    private javax.swing.JButton ProcessButton;
    private javax.swing.JTextField StaffTxt;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mainJtable;
    // End of variables declaration//GEN-END:variables
}
